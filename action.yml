# action.yml
name: 'Run SDKMAN!'
author: 'SDKMAN!'
branding:
  icon: 'command'
  color: 'red'
description: 'Download the sdk you want to install'
inputs:
  candidate:
    description: 'The name of the candidate to install'
    required: false
  version:
    description: 'The version of the candidate to install'
    required: false
outputs:
  file:
    description: 'Filename of the downloaded archive.'
    value: ${{ steps.sdkman.outputs.file }}
runs:
  using: 'composite'
  steps:
    - id: sdkman
      shell: bash
      run: |
        if [[ $RUNNER_OS == 'Linux' || $RUNNER_OS == 'macOS' ]]; then
          export SDKMAN_DIR="$HOME/.sdkman" && curl -s "https://get.sdkman.io?rcupdate=false" | bash
          if [[ -z "${{ inputs.candidate }}" && -z "${{ inputs.version }}" ]]; then
            source $HOME/.sdkman/bin/sdkman-init.sh && sdk env install
          else
            candidate=${{ inputs.candidate }}
            version=${{ inputs.version }}
            source $HOME/.sdkman/bin/sdkman-init.sh && sdk install $candidate $version
          fi
          for child_dir in $(find "$SDKMAN_DIR/candidates" -mindepth 1 -maxdepth 1 -type d); do
            echo "$child_dir/current/bin" >> $GITHUB_PATH
          done
          echo "file=" >> $GITHUB_OUTPUT
        else
          candidate=${{ inputs.candidate }}
          version=${{ inputs.version }}
          platform=$(uname)
          base_name="${candidate}-${version}"
  
          zip_output="$base_name.zip"
          curl -L -o $zip_output https://api.sdkman.io/2/broker/download/$candidate/$version/$platform
          
          echo "file=$zip_output" >> $GITHUB_OUTPUT
        fi
